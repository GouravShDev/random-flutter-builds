name: Build job

on:
  # Manual triggers
  workflow_dispatch:
    inputs:
      release-tag:
        description: What to call this build
        required: true
      setup-command:
        description: What to do before building
        required: false
      artifact-path:
        description: What to release
        required: false
        default: 'build/app/outputs/flutter-apk/app.apk'
      artifact-name:
        description: What to call that artifact
        required: false
        default: 'app.apk'
      git-repo-name:
        description: Get project name
        required: true
      git-repo:
        description: Get Repo
        required: true
      git-ref:
        description: Git Ref (Optional)
        required: false
        default: 'main'
      dry-run:
        description: Creates a draft release
        required: false

jobs:
  build-app:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.git-repo }}
          fetch-depth: 0
          ref: ${{ github.event.inputs.git-ref }}

      - name: Set up JDK 12
        uses: actions/setup-java@v1
        with:
          java-version: 12
          
      - name: Set up
        if: github.event.inputs.git-ref != ''
        run: |
          set -e
          ${{ github.event.inputs.setup-command }}
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
            channel: 'stable' # or: 'beta', 'dev' or 'master'
      - name: Build Apk
        run: |
              flutter pub get
              flutter build apk
        working-directory: ${{ github.event.inputs.git-repo-name }
      - name: Clean up build artifacts
        run: |
          set -e
          cp ${{ github.event.inputs.artifact-path }} ${{ github.event.inputs.artifact-name }}
      - name: Create release
        uses: softprops/action-gh-release@v0.1.14
        with:
          tag_name: ${{ github.event.inputs.release-tag }}
          name: ${{ github.event.inputs.release-tag }}
          body: |
            awesome release
          files: |
            ${{ github.event.inputs.artifact-name }}
          draft: ${{ github.event.inputs.dry-run != '' }}
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
